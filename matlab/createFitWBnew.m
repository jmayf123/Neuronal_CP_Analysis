function [fitresult, gof] = createFitWB(HR,PC,threshold)
%CREATEFIT(LL,PC)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : LL
%      Y Output: PC
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 07-Jan-2019 23:14:35


%% Fit: 'untitled fit 1'.

LLfit = HR(1:end,1);
minLev = min(LLfit);
maxLev = max(LLfit);
if minLev<0
    LLfit = LLfit - minLev;
end

PCfit = PC';
[xData, yData] = prepareCurveData( LLfit, PCfit );
a = threshold;
% Set up fittype and options.
ft = fittype( 'c-d.*exp(-(x./a)^b)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [a -0.005 -Inf -Inf];
opts.StartPoint = [0.0530446491219723 0.625734126909384 0.505508072942099 0.757740130578333];

figure( 'Name', 'Weibul fit' );
Checkfit = 2;
% while Checkfit == 2


% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
clf;
A = fitresult

Values = coeffvalues(fitresult)
a = Values(1,1);
b = Values(1,2);
c = Values(1,3);
d = Values(1,4);

Levels =  LLfit(1,1):0.5:LLfit(end,1);

for x = 1:length(Levels(1,:))
   
YY(1,x) = c-d.*exp(-(Levels(1,x)./a)^b);
end

if minLev<0
Levels = Levels + minLev;
plot(Levels,YY)
Threshold = a+minLev
else
h = plot( fitresult, xData, yData );
legend( h, 'PC vs. LL', 'untitled fit 1', 'Location', 'NorthEast' );
xlabel LL
ylabel PC
grid on;
end


end
